# Docker Compose for PetCare Journal Backend
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: petcare-postgres
    environment:
      POSTGRES_DB: petjournal
      POSTGRES_USER: petcare_user
      POSTGRES_PASSWORD: petcare_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - petcare-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U petcare_user -d petjournal"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: petcare-backend
    environment:
      DATABASE_URL: postgresql://petcare_user:petcare_password@postgres:5432/petjournal
      SECRET_KEY: your-super-secret-key-change-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USERNAME: your-email@gmail.com
      SMTP_PASSWORD: your-app-password
      SMTP_FROM_EMAIL: noreply@petcarejournal.com
      OPENAI_API_KEY: your-openai-api-key
      FRONTEND_URL: http://localhost:3000
      ENVIRONMENT: production
    ports:
      - "8000:8000"
    networks:
      - petcare-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and sessions (optional)
  redis:
    image: redis:7-alpine
    container_name: petcare-redis
    ports:
      - "6379:6379"
    networks:
      - petcare-network
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  petcare-network:
    driver: bridge
